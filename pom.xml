<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.algz.platform</groupId>
	<artifactId>algz_war</artifactId>
	<version>0.0.2</version>
	<!-- 去掉下面这行，maven install 会打包成jar
	<packaging>war</packaging> -->
	<name>algz_war</name>
	<description>Algz project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

    
    	<!-- jpa -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<!-- 必须添加，不然启动时报异常：Add an implementation, such as Hibernate Validator, to the classpath -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.18.Final</version>
		</dependency>

		
		<!-- spring security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- spring security -->

	     <!-- jasper:tomcat提供的jsp引擎 -->
	     <dependency>
	        <groupId>org.apache.tomcat.embed</groupId>
	        <artifactId>tomcat-embed-jasper</artifactId>
	        <scope>provided</scope>
	     </dependency>
     
		<!-- 只能使用ojdbc6 (因为ojdbc6不支持设置连接时间，所以启动时，会提示：Driver does not support get/set network timeout for connections. ) 
		     与ojdbc8 (与 jsp引擎不兼容) 
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>6</version>
			<scope>runtime</scope>
		</dependency> -->
		<!-- 只能使用ojdbc6与ojdbc8 (与 jsp引擎不兼容) -->
		
		<!-- oracle wallet  ${pom.basedir}内置属性验证有问题，但运行没有问题。
					<systemPath>${pom.basedir}/src/main/resources/oracleWallet/lib/ojdbc8.jar</systemPath>
		-->
		<dependency>
			<groupId>com.algz.oracle</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>12.0</version>
			<scope>runtime</scope>
		</dependency>  
		
		
		<!-- mysql 驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- mysql 驱动 -->

		<!-- CXF webservice 只能匹配 spring boot2.2.9.RELEASE -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
			<version>3.3.1</version>
		</dependency>
		<!-- CXF webservice -->

		<!-- https://mvnrepository.com/artifact/commons-net/commons-net -->
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.7.2</version>
		</dependency>


		<!-- ampq 消息队列 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- ampq -->

		<!-- quartz 定时任务 <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-quartz</artifactId> 
			</dependency> -->

		<!-- email -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		
		<!-- websocket -->
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		
		<!-- redis -->
	    <dependency>
	      <groupId>org.springframework.boot</groupId>
	      <artifactId>spring-boot-starter-data-redis</artifactId>
	    </dependency> 
		<!-- redis -->
		
		<!--解析excel-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>5.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.1.0</version>
		</dependency>
		<!--解析excel-->
		
        <!-- 文档导出 
		<dependency>
		    <groupId>e-iceblue</groupId>
		    <artifactId>spire.doc</artifactId>
		    <version>10.9.8</version>
		</dependency>-->
		
		
		<!-- lombok 提供注解的简写（合集插件），@Getter/@Setter，@Slf4j 
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.16.20</version>
   			 <scope>provided</scope>
		</dependency>-->
		
<!-- https://blog.csdn.net/shipfei_csdn/article/details/103280032
		<dependency>
		<groupId>com</groupId>
		<artifactId>a</artifactId>
		<scope>system</scope>
		<systemPath>${project.basedir}/libs/yourlocaljar-3.0-RELEASE.jar</systemPath>
		</dependency> -->

		<!-- Spire.Doc for Java -->
		<dependency>
		    <groupId>e-iceblue</groupId>
		    <artifactId>spire.doc</artifactId>
		    <version>10.9.8</version>
		</dependency>
	</dependencies>

    
	<repositories>
		<!-- Spire.Doc for Java  -->
	        <repository>
	            <id>com.e-iceblue</id>
	            <name>e-iceblue</name>
	            <url>https://repo.e-iceblue.cn/repository/maven-public/</url>
	        </repository>
	        
	        <!-- 从阿里云效拉取 
	        <repository>
			    <id>rdc-releases</id>
			    <url>https://packages.aliyun.com/maven/repository/2319794-release-DgOSZd/</url>
			</repository>-->
			
			<!-- 从 Gitlab 拉取 
			  <repository>
			    <id>gitlab-maven</id>
			    <url>http://algz.f3322.net/api/v4/projects/2/packages/maven</url>
			  </repository>-->
		  <repository>
		    <id>gitlab-maven</id>
		    <url>http://algz.f3322.net/api/v4/projects/2/packages/maven</url>
		  </repository>
	</repositories>

	<distributionManagement>
		<!-- 打包部署推送到阿里云效 -->
	    <repository>
	        <!-- 此处id 与 settings.xml server id保持一致 -->
	        <id>rdc-releases</id>
	        <url>https://packages.aliyun.com/maven/repository/2319794-release-DgOSZd/</url>
	    </repository>
	    <snapshotRepository>
	        <id>rdc-snapshots</id>
	        <url>https://packages.aliyun.com/maven/repository/2319794-snapshot-dgsT7w/</url>
	    </snapshotRepository>

		<!-- Gitlab 部署打包上传 
	  <repository>
	    <id>gitlab-maven</id>
	    <url>${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven</url>
	  </repository>
	  <snapshotRepository>
	    <id>gitlab-maven</id>
	    <url>${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven</url>
	  </snapshotRepository>-->
	</distributionManagement>

	<!-- 编译打包 -->
	<build>
	<defaultGoal>compile</defaultGoal>  
		<resources>
		    <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <!-- <include>application.properties</include> -->
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.yml</include>
                    <include>**/*.html</include>
                    <include>**/*.js</include>
                    <include>**/*.css</include>
                    <include>**/*.map</include>
                    <include>**/*.jpg</include>
                    <include>**/*.png</include>
                    <include>**/*.ico</include>
                    <!-- 打包 banner.txt -->
                    <include>**/banner.txt</include>
                </includes>
            </resource>
			<resource>
				<directory>D:/Users/algz/Desktop/refDll/dll/tem</directory>
				<!-- 可选(默认部署到/BOOT-INF/class目录下)，部署目标目录（将tem目录下*.jar文件部署到/BOOT-INF/class/WEB-INF/lib目录下。） -->
				<targetPath>WEB-INF/lib</targetPath>
				<includes>
					<include>**/*.jar</include>
				</includes>
			</resource>
		</resources>
	
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	

</project>
